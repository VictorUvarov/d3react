{"version":3,"sources":["components/VisualizationPage/VisualizationPage.js","components/QuestionPage/QuestionPage.js","utils/Utils.js","components/Buttons/Buttons.js","components/PieChart/PieChart.js","components/DropDownMenu/DropDownMenu.js","components/Blob/Blob.js","components/Page/Page.js","components/LineChart/LineChart.js","components/USMap/USMap.js","components/BarChart/BarChart.js","utils/scroll.js","App.js","serviceWorker.js","index.js","data/power_outages.csv"],"names":["VisualizationPage","react_default","a","createElement","className","id","this","props","title","text","visualization","Component","QuestionPage","Utils","list","key","keyIsNum","filter","d","isKeyNum","l","forEach","element","push","Math","random","toString","substr","timeString","hr","substring","parseInt","uniqueList","item","findIndex","x","Object","toConsumableArray","Set","object","valueFunction","config","hasOwnProperty","matchingKeyInList","includes","matchingKeyInObject","num","valueKey","keyToAdd","Buttons","_this","ButtonGroup","values","map","val","i","Button","color","onClick","PieChart","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateYear","year","setState","filteredData","filterObjectList","data","years","getUniqueListFromKey","state","screenWidth","screenSize","screenHeight","labels","colors","datasets","backgroundColor","unique","description","numCustomersAffected","getRandomColor","display","displayTitle","fontSize","legend","displayLegend","position","legendPosition","layout","padding","left","right","bottom","top","_this2","_this$state","removeDuplicates","_this$formatChartData","formatChartData","chartData","creatChartConfig","Buttons_Buttons","es","options","getChartOptions","defaultProps","DropDownMenu","toggle","prevState","dropdownOpen","cause","causes","Dropdown","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","header","divider","idx","updateCause","Blob","nodes","length","react_vis_force","node","fill","console","log","causeCount","width","height","nextProps","DropDownMenu_DropDownMenu","simulationOptions","animate","LandingPage","LineChart","sums","reverse","undefined","sum","yearList","sumList","solidColor","label","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","scales","xAxes","scaleLabel","labelString","yAxes","gridLines","USMap","initConfig","stateCodes","name","mapHandler","event","target","dataset","statesCustomConfig","affectedAmounts","getListFromListOfObjects","max","apply","min","colorScale","scaleLinear","domain","range","addKeyToObjectFromMatchingListKey","currentYear","react_usa_map_default","customize","BarChart","times","cleanTime","beginTimes","key2","beginTime","timeList","time","pageIDs","document","onkeydown","e","window","keyCode","jump","App","onResize","innerWidth","innerHeight","addEventListener","csv","powerData","error","Page_LandingPage","jumpTarget","QuestionPage_QuestionPage_QuestionPage","VisualizationPage_VisualizationPage_VisualizationPage","Blob_Blob","PieChart_PieChart","USMap_USMap_USMap","BarChart_BarChart","LineChart_LineChart","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7d385b54.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./VisualizationPage.css\";\n\nexport default class VisualizationPage extends Component {\n  render() {\n    return (\n      <div className=\"vis-root\" id={this.props.id}>\n        <h1 className=\"vis-title\">{this.props.title}</h1>\n        <p className=\"vis-text\">{this.props.text}</p>\n        {this.props.visualization}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./QuestionPage.css\";\n\nexport default class QuestionPage extends Component {\n  render() {\n    return (\n      <div className=\"question-root\" id={this.props.id}>\n        <h1>{this.props.title}</h1>\n        <p className=\"question-text\">{this.props.text}</p>        \n      </div>\n    );\n  }\n}\n","export default class Utils {\n  static filterObjectList(list, key, keyIsNum) {\n    let filteredList = list.filter(d => {\n      return keyIsNum ? d[key] !== \"\" && +d[key] !== 0.0 : d[key] !== \"\";\n    });\n    return filteredList;\n  }\n\n  static getListFromListOfObjects(list, key, isKeyNum) {\n    let l = [];\n    list.forEach(element => {\n      isKeyNum === true ? l.push(+element[key]) : l.push(element[key]);\n    });\n    return l;\n  }\n\n  static getRandomColor() {\n    return (\n      \"#\" + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6)\n    );\n  }\n\n  static cleanTime(timeString) {\n    // 012345678 [index]\n    // 13:34:00\\0 [value]\n    let hr = timeString.substring(0, 2);\n\n    return parseInt(hr) % 24 + \":00:00\";\n  }\n\n  static getUniqueListFromKey(list, key) {\n    let uniqueList = [];\n    list.forEach(item => {\n      let i = uniqueList.findIndex(x => x[key] === item[key]);\n      if (i <= -1) {\n        uniqueList.push(item[key]);\n      }\n    });\n    uniqueList = [...new Set(uniqueList)];\n    return uniqueList;\n  }\n  /*\n    For each data element in power outage data\n    match the config name with the power outage geographic area\n    e.g. config.name =\"Alaska\"  filteredData.geographicAreas = \"Alaska\"\n    if they match add the color to the config so the map can color that state\n  */\n  static addKeyToObjectFromMatchingListKey(\n    list,\n    object,\n    valueFunction,\n    config\n  ) {\n    list.forEach(d => {\n      for (const key in object) {\n        if (object.hasOwnProperty(key)) {\n          const element = object[key];\n          if (\n            d[config.matchingKeyInList].includes(\n              element[config.matchingKeyInObject]\n            )\n          ) {\n            const num = +d[config.valueKey];\n            object[key][config.keyToAdd] = valueFunction(num);\n          }\n        }\n      }\n    });\n\n    return object;\n  }\n}\n","import React, { Component } from \"react\";\nimport { Button, ButtonGroup } from \"reactstrap\";\n\nexport default class Buttons extends Component {\n  render() {\n    return (\n      <ButtonGroup>\n        {this.props.values.map((val, i) => (\n          <Button color=\"info\" key={i} onClick={() => this.props.onClick(val)}>\n            {val}\n          </Button>\n        ))}\n      </ButtonGroup>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport Utils from \"../../utils/Utils\";\nimport Buttons from \"../Buttons/Buttons\";\n\nexport default class PieChart extends Component {\n  static defaultProps = {\n    displayTitle: true,\n    displayLegend: true,\n    legendPosition: \"right\",\n    title: \"Title\"\n  };\n\n  constructor(props) {\n    super(props);\n\n    let filteredData = Utils.filterObjectList(\n      props.data,\n      \"numCustomersAffected\",\n      true\n    );\n\n    let years = Utils.getUniqueListFromKey(filteredData, \"year\");\n\n    this.state = {\n      data: filteredData,\n      year: props.data[0].year,\n      years: years,\n      screenWidth: props.screenSize[0],\n      screenHeight: props.screenSize[1]\n    };\n  }\n\n  creatChartConfig(labels, values, colors) {\n    return {\n      labels: labels,\n      datasets: [\n        {\n          data: values,\n          backgroundColor: colors\n        }\n      ]\n    };\n  }\n\n  formatChartData(unique) {\n    let labels = [];\n    let values = [];\n    let colors = [];\n    unique.forEach(d => {\n      labels.push(d.description);\n      values.push(parseInt(d.numCustomersAffected));\n      colors.push(Utils.getRandomColor());\n    });\n    return { labels, values, colors };\n  }\n\n  getChartOptions() {\n    return {\n      title: {\n        display: this.props.displayTitle,\n        text: this.props.title + \" (\" + this.state.year + \")\",\n        fontSize: 25\n      },\n      legend: {\n        display: this.props.displayLegend,\n        position: this.props.legendPosition\n      },\n      layout: {\n        padding: {\n          left: 0,\n          right: 50,\n          bottom: 50,\n          top: 0\n        }\n      }\n    };\n  }\n\n  removeDuplicates(filteredData) {\n    let unique = [];\n    filteredData.forEach(item => {\n      let i = unique.findIndex(x => x.description === item.description);\n      if (i <= -1) {\n        unique.push({\n          year: item.year,\n          description: item.description,\n          numCustomersAffected: item.numCustomersAffected\n        });\n      }\n    });\n    return unique;\n  }\n\n  updateYear = year => {\n    this.setState({ year: year });\n  };\n\n  render() {\n    const { data, years } = this.state;\n\n    // filter data based on current year\n    let filteredData = data.filter(d => {\n      return d.year === this.state.year;\n    });\n\n    // remove duplicate descriptions, since pie chart categories are descriptions\n    let unique = this.removeDuplicates(filteredData);\n\n    // since chart.js needs a special format for chart data\n    // split the unique data so that it can be added to chart data\n    let { labels, values, colors } = this.formatChartData(unique);\n\n    // chart.js data format\n    let chartData = this.creatChartConfig(labels, values, colors);\n\n    return (\n      <div>\n        <Buttons onClick={this.updateYear} values={years} />\n        <Pie data={chartData} options={this.getChartOptions()} />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n\nexport default class DropDownMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      cause: props.causes[0]\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  };\n\n  render() {\n    return (\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle caret>{this.state.cause}</DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem header>{this.props.header}</DropdownItem>\n          <DropdownItem divider />\n          {this.props.causes.map((cause, idx) => (\n            <DropdownItem\n              key={idx}\n              onClick={() => {\n                this.props.updateCause(cause);\n                this.setState({cause: cause});\n              }}\n            >\n              {cause}\n            </DropdownItem>\n          ))}\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { ForceGraph, ForceGraphNode } from \"react-vis-force\";\nimport DropDownMenu from \"./../DropDownMenu/DropDownMenu\";\nimport Utils from \"../../utils/Utils\";\n\nexport default class Blob extends Component {\n  constructor(props) {\n    super(props);\n\n    let filteredData = Utils.filterObjectList(\n      props.data,\n      \"numCustomersAffected\",\n      true\n    );\n    let causes = Utils.getUniqueListFromKey(filteredData, \"description\");\n\n    this.state = {\n      data: props.data,\n      nodes: [],\n      width: props.screenSize[0],\n      height: props.screenSize[1],\n      cause: causes[0],\n      causes: causes,\n      causeCount: 0\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      width: nextProps.screenSize[0],\n      height: nextProps.screenSize[1]\n    });\n  }\n\n  componentDidMount() {\n    var nodes = [];\n    let filteredData = this.state.data.filter(d => {\n      return d.description === this.state.cause;\n    });\n    var i = 0;\n    for (; i < filteredData.length / 10; i++) {\n      nodes.push(<ForceGraphNode key={i} node={{ id: i }} fill=\"red\" />);\n    }\n    for (; i < this.state.data.length / 10; i++) {\n      nodes.push(<ForceGraphNode key={i} node={{ id: i }} fill=\"black\" />);\n    }\n    this.setState({ causeCount: filteredData.length, nodes: nodes });\n  }\n\n  updateCause = cause => {\n    var nodes = [];\n    let filteredData = this.state.data.filter(d => {\n      return d.description === cause;\n    });\n    var i = 0;\n    for (; i < filteredData.length / 10; i++) {\n      nodes.push(<ForceGraphNode key={i} node={{ id: i }} fill=\"red\" />);\n    }\n    console.log(i);\n    for (; i < this.state.data.length / 10; i++) {\n      nodes.push(<ForceGraphNode key={i} node={{ id: i }} fill=\"black\" />);\n    }\n    this.setState({\n      cause: cause,\n      causeCount: filteredData.length,\n      nodes: nodes\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <label>\n          {this.state.causeCount} out of {this.state.data.length} outages due to{\" \"}\n          {this.state.cause} in the last 15 years.\n        </label>\n        <DropDownMenu\n          header=\"Select a cause\"\n          causes={this.state.causes}\n          updateCause={this.updateCause}\n        />\n        <ForceGraph\n          simulationOptions={{\n            height: this.state.height - 250,\n            width: this.state.width,\n            animate: true\n          }}\n        >\n          {this.state.nodes}\n        </ForceGraph>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Page.css\";\n\nexport default class LandingPage extends Component {\n  render() {\n    return (\n      <div className=\"landing-root\" id={this.props.id}>\n        <h1>{this.props.title}</h1>\n        <p className=\"landing-text\">{this.props.text}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport Utils from \"../../utils/Utils\";\n\nexport default class LineChart extends Component {\n  state = {\n    years: [],\n    sums: []\n  };\n\n  componentDidMount() {\n    // create a list of all the years\n    let years = Utils.getUniqueListFromKey(this.props.data, \"year\");\n    years.reverse();\n\n    // create a list of objects for each year and their sum\n    let sums = [];\n    this.props.data.forEach(d => {\n      let i = years.findIndex(x => x === d.year);\n      if (sums[i] === undefined) {\n        sums[i] = {\n          year: years[i],\n          sum: +d.numCustomersAffected\n        };\n      } else {\n        sums[i].sum += +d.numCustomersAffected;\n      }\n    });\n\n    let yearList = [];\n    let sumList = [];\n    sums.forEach(d => {\n      yearList.push(d.year);\n      sumList.push(d.sum);\n    });\n\n    this.setState({\n      years: yearList,\n      sums: sumList\n    });\n  }\n\n  render() {\n    const color = \"rgba(75,192,192,0.6)\";\n    const solidColor = \"rgba(75,192,192,1)\";\n    return (\n      <div>\n        <Line\n          data={{\n            labels: this.state.years,\n            datasets: [\n              {\n                label: \"\",\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: color,\n                borderColor: solidColor,\n                borderCapStyle: \"butt\",\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: \"miter\",\n                pointBorderColor: solidColor,\n                pointBackgroundColor: \"#fff\",\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: solidColor,\n                pointHoverBorderColor: solidColor,\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: this.state.sums\n              }\n            ]\n          }}\n          options={{\n            legend: {\n              display: false\n            },\n            title: {\n              display: true,\n              text: this.props.title,\n              fontSize: 25\n            },\n            scales: {\n              xAxes: [\n                {\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Year\",\n                    fontSize: 25\n                  }\n                }\n              ],\n              yAxes: [\n                {\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Number of customers affected\",\n                    fontSize: 25\n                  },\n                  gridLines: {\n                    display: true\n                  }\n                }\n              ]\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport USAMap from \"react-usa-map\";\nimport stateCodes from \"../../data/states_hash.json\";\nimport Utils from \"../../utils/Utils\";\nimport { scaleLinear } from \"d3\";\nimport \"./USMap.css\";\n\nexport default class USMap extends Component {\n  constructor(props) {\n    super(props);\n\n    let filteredData = Utils.filterObjectList(\n      props.data,\n      \"numCustomersAffected\",\n      true\n    );\n\n    let config = this.initConfig();\n\n    let affectedAmounts = Utils.getListFromListOfObjects(\n      filteredData,\n      \"numCustomersAffected\",\n      true\n    );\n    let max = Math.max(...affectedAmounts) / 10;\n    let min = Math.min(...affectedAmounts);\n\n    const colorStart = \"#d3d3d3\";\n    const colorEnd = \"#ff0000\";\n    const colorScale = scaleLinear()\n      .domain([min, max])\n      .range([colorStart, colorEnd]);\n\n    config = Utils.addKeyToObjectFromMatchingListKey(\n      filteredData,\n      config,\n      colorScale,\n      {\n        matchingKeyInList: \"geographicAreas\",\n        matchingKeyInObject: \"name\",\n        valueKey: \"numCustomersAffected\",\n        keyToAdd: \"fill\"\n      }\n    );\n\n    this.state = {\n      currentYear: props.data[0].year,\n      title: \"United States Map\",\n      data: filteredData,\n      config: config,\n      max: max,\n      min: min,\n      colorScale: colorScale\n    };\n  }\n\n  initConfig = () => {\n    let config = {};\n    for (let key in stateCodes) {\n      if (stateCodes.hasOwnProperty(key)) {\n        config[key] = {\n          name: stateCodes[key]\n        };\n      }\n    }\n    return config;\n  };\n\n  mapHandler = event => {\n    this.setState({ title: event.target.dataset.name });\n  };\n\n  componentWillUpdate() {\n    console.log(this.state.title);\n  }\n\n  statesCustomConfig = () => {\n    return this.state.config;\n  };\n\n  render() {\n    return (\n      <USAMap\n        onClick={this.mapHandler}\n        customize={this.state.config}\n        width={this.props.screenSize[0]}\n        height={this.props.screenSize[1] - 250}\n        title=\"United States Map\"\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport Utils from \"../../utils/Utils\";\n\nexport default class BarChart extends Component {\n  state = {\n    times: [],\n    sums: []\n  };\n\n  componentDidMount() {\n    const { data } = this.props;\n\n    let key = \"beginTime\";\n    let filteredData = Utils.filterObjectList(data, key, false);\n    filteredData.forEach(d => {\n      d[key] = Utils.cleanTime(d[key]);\n    });\n    let beginTimes = Utils.getUniqueListFromKey(filteredData, key);\n\n    // create a list of objects for each beginTime and their sum\n    // e.g. {beginTime: \"09:28:00\", sum: 262000}\n    let sums = [];\n    let key2 = \"numCustomersAffected\";\n    filteredData.forEach(d => {\n      let i = beginTimes.findIndex(x => x === d[key]);\n      if (sums[i] === undefined) {\n        sums[i] = {\n          beginTime: beginTimes[i],\n          sum: +d[key2]\n        };\n      } else {\n        sums[i].sum += +d[key2];\n      }\n    });\n\n    // organize sums by time e.g. 1:00:00 < 12:00:00\n    let timeList = [];\n    let sumList = [];\n    sums.forEach(d => {\n      let containsColon = d.beginTime.substring(0, 2).includes(\":\");\n      let time = containsColon ? d.beginTime.substring(0, 1) : d.beginTime.substring(0, 2);\n      let i = parseInt(time);\n \n      timeList[i] = d.beginTime;\n      sumList[i] = d.sum;\n    });\n\n    this.setState({\n      times: timeList,\n      sums: sumList\n    });\n  }\n\n  render() {\n    const color = \"rgba(70, 130, 180, 0.6)\";\n    const solidColor = \"rgba(70, 130, 180, 1)\";\n    return (\n      <div>\n        <Bar\n          data={{\n            labels: this.state.times,\n            datasets: [\n              {\n                label: \"\",\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: color,\n                borderColor: solidColor,\n                borderCapStyle: \"butt\",\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: \"miter\",\n                pointBorderColor: solidColor,\n                pointBackgroundColor: \"#fff\",\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: solidColor,\n                pointHoverBorderColor: solidColor,\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: this.state.sums\n              }\n            ]\n          }}\n          options={{\n            legend: {\n              display: false\n            },\n            title: {\n              display: true,\n              text: this.props.title,\n              fontSize: 25\n            },\n            scales: {\n              xAxes: [\n                {\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Time\",\n                    fontSize: 25\n                  }\n                }\n              ],\n              yAxes: [\n                {\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Number of customers affected\",\n                    fontSize: 25\n                  },\n                  gridLines: {\n                    display: true\n                  }\n                }\n              ]\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import jump from \"jump.js\";\n\nconst pageIDs = [\n  \"#home-page\",\n  \"#question-page-1\",\n  \"#vis-page-1\",\n  \"#question-page-2\",\n  \"#vis-page-2\",\n  \"#question-page-3\",\n  \"#vis-page-3\",\n  \"#question-page-4\",\n  \"#vis-page-4\",\n  \"#question-page-5\",\n  \"#vis-page-5\",\n  \"#conclusion-page\"\n];\n\nlet i = 0;\n\ndocument.onkeydown = checkKey;\n\nfunction checkKey(e) {\n  e = e || window.event;\n\n  if (e.keyCode === 38) {\n    // up arrow\n    i--;\n    i %= pageIDs.length;\n    jump(pageIDs[i]);\n  } else if (e.keyCode === 40) {\n    // down arrow\n    console.log(e.keyCode);\n    i++;\n    i %= pageIDs.length;\n    jump(pageIDs[i]);\n  } else if (e.keyCode === 37) {\n    // left arrow\n    i--;\n    i %= pageIDs.length;\n    jump(pageIDs[i]);\n  } else if (e.keyCode === 39) {\n    // right arrow\n    i++;\n    i %= pageIDs.length;\n    jump(pageIDs[i]);\n  }\n}\n","import React, { Component } from \"react\";\nimport VisualizationPage from \"./components/VisualizationPage/VisualizationPage\";\nimport QuestionPage from \"./components/QuestionPage/QuestionPage\";\nimport PieChart from \"./components/PieChart/PieChart\";\nimport Blob from \"./components/Blob/Blob\";\nimport Page from \"./components/Page/Page\";\nimport powerData from \"./data/power_outages.csv\";\nimport { csv } from \"d3-request\";\nimport LineChart from \"./components/LineChart/LineChart\";\nimport USMap from \"./components/USMap/USMap\";\nimport BarChart from \"./components/BarChart/BarChart\";\nimport \"./utils/scroll\";\n\nexport default class App extends Component {\n  state = {\n    screenWidth: 1920,\n    screenHeight: 1080,\n    data: null\n  };\n\n  async componentDidMount() {\n    window.addEventListener(\"resize\", this.onResize, false);\n    this.onResize();\n    csv(powerData, (error, data) => {\n      if (error) throw error;\n      this.setState({ data: data });\n    });\n  }\n\n  onResize = () => {\n    this.setState({\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight\n    });\n  };\n\n  render() {\n    const { data, screenWidth, screenHeight } = this.state;\n\n    if (data === null) {\n      return <div>loading...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <div>\n          <Page\n            id=\"home-page\"\n            jumpTarget=\"#question-page-1\"\n            title=\"Power outages in the United States\"\n            text=\"We currently live in a time where electronics become\n            more and more integral in our daily lives. As a result, the \n            demand for power increases and events like power outages are \n            becoming more and more concerning. Power outages \n            in the United States occur for many reasons. Analysis of the \n            causes, frequency, and the impact of power outages follows...\"\n          />\n          <QuestionPage\n            id=\"question-page-1\"\n            jumpTarget=\"#vis-page-1\"\n            title=\"What causes outages?\"\n            text=\"The simulation below shows the causes of power outages and their \n            relative frequency to one another in the United States from \n            2000-2014. From the simulation we learned that severe \n            weather conditions cause the most power outages.\"\n          />\n          <VisualizationPage\n            id=\"vis-page-1\"\n            jumpTarget=\"#question-page-2\"\n            title=\"Each node represents about 10 power outages\"\n            visualization={\n              <Blob data={data} screenSize={[screenWidth, screenHeight]} />\n            }\n          />\n          <QuestionPage\n            id=\"question-page-2\"\n            jumpTarget=\"#vis-page-2\"\n            title=\"What are the most common causes?\"\n            text=\"To answer this question we used an interactive pie chart \n            that filters the data based on year. Based on that year you can\n            see what the most common causes on power outages in the United \n            States.\"\n          />\n          <VisualizationPage\n            id=\"vis-page-2\"\n            jumpTarget=\"#question-page-3\"\n            visualization={\n              <PieChart\n                data={data}\n                title=\"Power Outage Causes and Number of Customer Affected\"\n                screenSize={[screenWidth, screenHeight]}\n              />\n            }\n          />\n          <QuestionPage\n            id=\"question-page-3\"\n            jumpTarget=\"#vis-page-3\"\n            title=\"Where is it more common?\"\n            text=\"To answer this question we used a chloropleth map to show\n            which states experience power outages more frequently.\n            The darker the color of the state the more people were affected.\"\n          />\n          <VisualizationPage\n            id=\"vis-page-3\"\n            jumpTarget=\"#question-page-4\"\n            title=\"Amount of Customers Affected in the United States\"\n            visualization={\n              <USMap data={data} screenSize={[screenWidth, screenHeight]} />\n            }\n          />\n          <QuestionPage\n            id=\"question-page-4\"\n            jumpTarget=\"#vis-page-4\"\n            title=\"When is it more impactful?\"\n            text=\"Looking at the bar graph below we can conclude that the most common hours\n            of the day when people experience power outages are between 3:00pm - 6:00pm\"\n          />\n          <VisualizationPage\n            id=\"vis-page-4\"\n            jumpTarget=\"#question-page-5\"\n            visualization={\n              <BarChart\n                data={data}\n                title=\"Number of People Affected for Every Hour\"\n              />\n            }\n          />\n          <QuestionPage\n            id=\"question-page-5\"\n            jumpTarget=\"#vis-page-5\"\n            title=\"When is it more impactful?\"\n            text=\"By looking at the line graph below we can answer when power outages are more impactful based on year.\n            The years 2008, 2011, and 2012 had the highest incidences of power outages in the last 15 years of our data set range.\"\n\n          />\n          <VisualizationPage\n            id=\"vis-page-5\"\n            jumpTarget=\"#conclusion-page\"\n            visualization={\n              <LineChart\n                data={data}\n                title=\"Number of People Affected Over Time\"\n              />\n            }\n          />\n          <Page\n            id=\"conclusion-page\"\n            jumpTarget=\"#home-page\"\n            title=\"Conclusion\"\n            text=\"Through the use of both static and interactive visualizations \n            we were able to take a data set that truly intrested us and explored \n            the different ways to represent the answers we found. Some key \n            insights we found from the data set include; that roughly half of \n            the power outages in the last fifteen years have been caused by \n            severe weather conditions, that people in 2014 who experienced \n            power outages mainly had been caused by system failures, and \n            that New Mexico, Oklahoma, and Kansas experience power outages\n            more frequently than the rest of the United States.\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/power_outages.b012b964.csv\";"],"sourceRoot":""}