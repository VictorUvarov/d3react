{"version":3,"sources":["components/VisualizationPage/VisualizationPage.js","components/QuestionPage/QuestionPage.js","components/DropDownButton/DropDownButton.js","components/PieChart/PieChart.js","components/DropDownMenu/DropDownMenu.js","components/Blob/Blob.js","components/Page/Page.js","components/LineChart/LineChart.js","components/USMap/USMap.js","App.js","serviceWorker.js","index.js","data/power_outages_v3.csv"],"names":["VisualizationPage","react_default","a","createElement","className","this","props","text","visualization","Component","QuestionPage","title","DropDownButton","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","prevState","dropdownOpen","state","year","years","_this2","Dropdown","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","header","divider","map","idx","key","onClick","updateYear","PieChart","filteredData","data","filter","d","numCustomersAffected","forEach","item","findIndex","x","push","toConsumableArray","Set","screenWidth","screenSize","screenHeight","unique","description","labels","values","colors","console","log","parseInt","Math","random","toString","substr","chartData","datasets","backgroundColor","DropDownButton_DropDownButton","es","options","display","displayTitle","fontSize","legend","displayLegend","position","legendPosition","layout","padding","left","right","bottom","top","defaultProps","DropDownMenu","cause","causes","updateCause","Blob","nodes","i","length","react_vis_force","node","id","fill","causeCount","width","height","nextProps","DropDownMenu_DropDownMenu","simulationOptions","animate","LandingPage","LineChart","sums","undefined","sum","yearList","sumList","label","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","scales","xAxes","scaleLabel","labelString","yAxes","gridLines","USMap","mapHandler","event","target","dataset","name","statesCustomConfig","config","filterObjectList","list","isNum","initConfig","stateCodes","hasOwnProperty","getListFromListOfObjects","isKeyNum","l","element","addKeyToObjectFromMatchingListKey","object","valueFunction","includes","num","affectedAmounts","max","apply","min","colorScale","scaleLinear","domain","range","currentYear","react_usa_map_default","customize","App","onResize","window","innerWidth","innerHeight","addEventListener","csv","powerData","error","_this$state","Page_LandingPage","QuestionPage_QuestionPage_QuestionPage","VisualizationPage_VisualizationPage_VisualizationPage","Blob_Blob","PieChart_PieChart","USMap_USMap_USMap","LineChart_LineChart","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3a48bb8a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./VisualizationPage.css\";\n\nexport default class VisualizationPage extends Component {\n  render() {\n    return (\n      <div className=\"vis-root\">\n        <p className=\"vis-text\">{this.props.text}</p>\n        {this.props.visualization}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./QuestionPage.css\";\n\nexport default class QuestionPage extends Component {\n  render() {\n    return (\n      <div className=\"question-root\">\n        <h1>{this.props.title}</h1>\n        <p className=\"question-text\">{this.props.text}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n\nexport default class DropDownButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      year: props.years[0]\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  };\n\n  render() {\n    return (\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle caret>{this.state.year}</DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem header>{this.props.header}</DropdownItem>\n          <DropdownItem divider />\n          {this.props.years.map((year, idx) => (\n            <DropdownItem\n              key={idx}\n              onClick={() => {\n                this.props.updateYear(year);\n                this.setState({year: year});\n              }}\n            >\n              {year}\n            </DropdownItem>\n          ))}\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport DropDownButton from \"./../DropDownButton/DropDownButton\";\n\nexport default class PieChart extends Component {\n  static defaultProps = {\n    displayTitle: true,\n    displayLegend: true,\n    legendPosition: \"right\",\n    title: \"Title\"\n  };\n\n  constructor(props) {\n    super(props);\n    // remove rows in the data with no customer affected amount\n    let filteredData = props.data.filter(d => {\n      return d.numCustomersAffected !== \"\";\n    });\n    // remove 0s\n    filteredData = props.data.filter(d => {\n      return +d.numCustomersAffected !== 0;\n    });\n    // get the unique list of years\n    let years = [];\n    filteredData.forEach(item => {\n      let i = years.findIndex(x => x.year === item.year);\n      if (i <= -1) {\n        years.push(item.year);\n      }\n    });\n    years = [...new Set(years)];\n\n    this.state = {\n      data: filteredData,\n      year: props.data[0].year,\n      years: years,\n      screenWidth: props.screenSize[0],\n      screenHeight: props.screenSize[1]\n    };\n  }\n\n  updateYear = year => {\n    this.setState({ year: year });\n  };\n\n  render() {\n    const { data } = this.state;\n\n    // filter data based on current year\n    let filteredData = data.filter(d => {\n      return d.year === this.state.year;\n    });\n\n    // remove duplicate descriptions, since pie chart categories are descriptions\n    let unique = [];\n    filteredData.forEach(item => {\n      let i = unique.findIndex(x => x.description === item.description);\n      if (i <= -1) {\n        unique.push({\n          year: item.year,\n          description: item.description,\n          numCustomersAffected: item.numCustomersAffected\n        });\n      }\n    });\n\n    // since chart.js needs a special format for chart data\n    // split the unique data so that it can be added to chart data\n    let labels = [];\n    let values = [];\n    let colors = [];\n    unique.forEach(d => {\n      console.log(d)\n      labels.push(d.description);\n      values.push(parseInt(d.numCustomersAffected));\n      colors.push(\n        \"#\" + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6)\n      );\n    });\n\n    // chart.js data format\n    let chartData = {\n      labels: labels,\n      datasets: [\n        {\n          data: values,\n          backgroundColor: colors\n        }\n      ]\n    };\n\n    if (data === null) {\n      return <div>loading...</div>;\n    }\n\n    return (\n      <div>\n        <DropDownButton\n          header=\"Select a Year\"\n          years={this.state.years}\n          updateYear={this.updateYear}\n        />\n        <Pie\n          data={chartData}\n          options={{\n            title: {\n              display: this.props.displayTitle,\n              text: this.props.title + \" (\" + this.state.year + \")\",\n              fontSize: 25\n            },\n            legend: {\n              display: this.props.displayLegend,\n              position: this.props.legendPosition\n            },\n            layout: {\n              padding: {\n                left: 0,\n                right: 50,\n                bottom: 50,\n                top: 0\n              }\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n\nexport default class DropDownMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownOpen: false,\n      cause: props.causes[0]\n    };\n  }\n\n  toggle = () => {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  };\n\n  render() {\n    return (\n      <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle caret>{this.state.cause}</DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem header>{this.props.header}</DropdownItem>\n          <DropdownItem divider />\n          {this.props.causes.map((cause, idx) => (\n            <DropdownItem\n              key={idx}\n              onClick={() => {\n                this.props.updateCause(cause);\n                this.setState({cause: cause});\n              }}\n            >\n              {cause}\n            </DropdownItem>\n          ))}\n        </DropdownMenu>\n      </Dropdown>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { ForceGraph, ForceGraphNode } from \"react-vis-force\";\nimport DropDownMenu from \"./../DropDownMenu/DropDownMenu\";\n\nexport default class Blob extends Component {\n  constructor(props) {\n    super(props);\n    let filteredData = props.data.filter(d => {\n      return d;\n    });\n    let causes = []\n\n    filteredData.forEach(item => {\n      let i = causes.findIndex(x => x.description === item.description);\n      if (i <= -1) {\n        causes.push(item.description);\n      }\n    });\n    causes = [...new Set(causes)];\n\n    this.state = {\n      data: props.data,\n      nodes: [],\n      width: props.screenSize[0],\n      height: props.screenSize[1],\n      cause: causes[0],\n      causes: causes,\n      causeCount: 0,\n    };\n  }\n\n  componentWillReceiveProps(nextProps){\n    this.setState({\n      width: nextProps.screenSize[0],\n      height: nextProps.screenSize[1]\n    });\n  }\n\n  componentDidMount() {\n    var nodes = [];\n    let filteredData = this.state.data.filter(d => {\n      return d.description === this.state.cause\n    });\n    var i = 0;\n    for(; i < filteredData.length / 10; i++) {\n      nodes.push(\n        <ForceGraphNode key={i} node={{ id: i }} fill=\"red\" />\n      );\n    }\n    for(; i < this.state.data.length / 10; i++) {\n      nodes.push(\n        <ForceGraphNode key={i} node={{ id: i }} fill=\"black\" />\n      );\n    }\n    this.setState( \n      {causeCount : filteredData.length,\n      nodes: nodes} );\n  }\n\n  updateCause = cause => {\n    var nodes = [];\n    let filteredData = this.state.data.filter(d => {\n      return d.description === cause\n    });\n    var i = 0;\n    for(; i < filteredData.length / 10; i++) {\n      nodes.push(\n        <ForceGraphNode key={i} node={{ id: i }} fill=\"red\" />\n      );\n    }\n    console.log(i);\n    for(; i < this.state.data.length / 10; i++) {\n      nodes.push(\n        <ForceGraphNode key={i} node={{ id: i }} fill=\"black\" />\n      );\n    }\n    this.setState( \n      {cause: cause,\n      causeCount : filteredData.length, \n      nodes: nodes} );\n  }\n\n  render() {\n    return (\n      <div>\n        <label> \n          {this.state.causeCount} out of {this.state.data.length} outages due to {this.state.cause} in the last 15 years.\n        </label>\n        <DropDownMenu\n          header=\"Select a cause\"\n          causes={this.state.causes}\n          updateCause={this.updateCause}\n        />\n        <ForceGraph simulationOptions={{ height: this.state.height, \n          width: this.state.width,\n          animate: true }}>\n          {this.state.nodes}\n        </ForceGraph>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Page.css\";\n\nexport default class LandingPage extends Component {\n  render() {\n    return (\n      <div className=\"landing-root\">\n        <h1>{this.props.title}</h1>\n        <p className=\"landing-text\">{this.props.text}</p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nexport default class LineChart extends Component {\n  state = {\n    years: [],\n    sums: []\n  }\n  componentDidMount() {\n    // create a list of all the years\n    let years = [];\n    this.props.data.forEach(item => {\n      let i = years.findIndex(x => x.description === item.description);\n      if (i <= -1) {\n        years.push(item.year);\n      }\n    });\n    // turn the list of years into a set of years\n    years = [...new Set(years)];\n\n    // create a list of objects for each year and their sum\n    let sums = [];\n    this.props.data.forEach(d => {\n      let i = years.findIndex(x => x === d.year);\n      if (sums[i] === undefined) {\n        sums[i] = {\n          year: years[i],\n          sum: +d.numCustomersAffected\n        };\n      } else {\n        sums[i].sum += +d.numCustomersAffected;\n      }\n    });\n    \n    let yearList = [];\n    let sumList = [];\n    sums.forEach(d => {\n      yearList.push(d.year);\n      sumList.push(d.sum);\n    });\n\n    this.setState({\n      years: yearList,\n      sums: sumList\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Bar\n          data={\n            {\n              labels: this.state.years,\n              datasets: [\n                {\n                  label: \"\",\n                  fill: false,\n                  lineTension: 0.1,\n                  backgroundColor: \"rgba(75,192,192,0.4)\",\n                  borderColor: \"rgba(75,192,192,1)\",\n                  borderCapStyle: \"butt\",\n                  borderDash: [],\n                  borderDashOffset: 0.0,\n                  borderJoinStyle: \"miter\",\n                  pointBorderColor: \"rgba(75,192,192,1)\",\n                  pointBackgroundColor: \"#fff\",\n                  pointBorderWidth: 1,\n                  pointHoverRadius: 5,\n                  pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n                  pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                  pointHoverBorderWidth: 2,\n                  pointRadius: 1,\n                  pointHitRadius: 10,\n                  data: this.state.sums\n                }\n              ]\n            }            \n          }\n          options={{\n            legend: {\n              display: false\n            },\n            title: {\n              display: true,\n              text: this.props.title,\n              fontSize: 25\n            },\n            scales: {\n              xAxes: [\n                {\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Year\",\n                    fontSize: 25\n                  }\n                }\n              ],\n              yAxes: [\n                {\n                  display: true,\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Number of customers affected\",\n                    fontSize: 25\n                  },\n                  gridLines: {\n                    display: true\n                  }\n                }\n              ]\n            }\n          }}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport USAMap from \"react-usa-map\";\nimport stateCodes from \"../../data/states_hash.json\";\nimport { scaleLinear } from \"d3-scale\";\nimport \"./USMap.css\";\n\nexport default class USMap extends Component {\n  constructor(props) {\n    super(props);\n\n    let filteredData = this.filterObjectList(\n      props.data,\n      \"numCustomersAffected\",\n      true\n    );\n\n    let config = this.initConfig();\n\n    let affectedAmounts = this.getListFromListOfObjects(\n      filteredData,\n      \"numCustomersAffected\",\n      true\n    );\n    let max = Math.max(...affectedAmounts) / 10;\n    let min = Math.min(...affectedAmounts);\n\n    const colorStart = \"#d3d3d3\";\n    const colorEnd = \"#ff0000\";\n    const colorScale = scaleLinear()\n      .domain([min, max])\n      .range([colorStart, colorEnd]);\n\n    config = this.addKeyToObjectFromMatchingListKey(\n      filteredData,\n      config,\n      colorScale\n    );\n\n    this.state = {\n      currentYear: props.data[0].year,\n      title: \"United States Map\",\n      data: filteredData,\n      config: config,\n      max: max,\n      min: min,\n      colorScale: colorScale\n    };\n  }\n\n  mapHandler = event => {\n    this.setState({ title: event.target.dataset.name });\n    console.log(event.target.dataset.name);\n  };\n\n  statesCustomConfig = () => {\n    return this.state.config;\n  };\n\n  filterObjectList = (list, key, isNum) => {\n    let filteredList = list.filter(d => {\n      if (isNum) return d[key] !== \"\" || +d[key] !== 0;\n      else return d[key] !== \"\";\n    });\n    return filteredList;\n  };\n\n  initConfig = () => {\n    let config = {};\n    for (let key in stateCodes) {\n      if (stateCodes.hasOwnProperty(key)) {\n        config[key] = {\n          name: stateCodes[key]\n        };\n      }\n    }\n    return config;\n  };\n\n  getListFromListOfObjects = (list, key, isKeyNum) => {\n    let l = [];\n    list.forEach(element => {\n      isKeyNum === true ? l.push(+element[key]) : l.push(element[key]);\n    });\n    return l;\n  };\n\n  /*\n    For each data element in power outage data\n    match the config name with the power outage geographic area\n    e.g. config.name =\"Alaska\"  filteredData.geographicAreas = \"Alaska\"\n    if they match add the color to the config so the map can color that state\n  */\n  addKeyToObjectFromMatchingListKey = (list, object, valueFunction) => {\n    const matchingKeyInList = \"geographicAreas\";\n    const matchingKeyInObject = \"name\";\n    const valueKey = \"numCustomersAffected\";\n    const keyToAdd = \"fill\";\n\n    list.forEach(d => {\n      for (const key in object) {\n        if (object.hasOwnProperty(key)) {\n          const element = object[key];\n          if (d[matchingKeyInList].includes(element[matchingKeyInObject])) {\n            const num = +d[valueKey];\n            object[key][keyToAdd] = valueFunction(num);\n          }\n        }\n      }\n    });\n\n    return object;\n  };\n\n  render() {\n    return (\n      <USAMap\n        onClick={this.mapHandler}\n        customize={this.state.config}\n        width={this.props.screenSize[0]}\n        height={this.props.screenSize[1] - 100}\n        title=\"United States Map\"\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport VisualizationPage from \"./components/VisualizationPage/VisualizationPage\";\nimport QuestionPage from \"./components/QuestionPage/QuestionPage\";\nimport PieChart from \"./components/PieChart/PieChart\";\nimport Blob from \"./components/Blob/Blob\";\nimport Page from \"./components/Page/Page\";\nimport powerData from \"./data/power_outages_v3.csv\";\nimport { csv } from \"d3-request\";\nimport LineChart from \"./components/LineChart/LineChart\";\nimport USMap from \"./components/USMap/USMap\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      screenWidth: 1920,\n      screenHeight: 1080,\n      data: null\n    };\n  }\n\n  async componentDidMount() {\n    window.addEventListener(\"resize\", this.onResize, false);\n    this.onResize();\n    csv(powerData, (error, data) => {\n      if (error) throw error;\n      this.setState({ data: data });\n    });\n  }\n\n  onResize = () => {\n    this.setState({\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight\n    });\n  };\n\n  render() {\n    const { data, screenWidth, screenHeight } = this.state;\n\n    if (data === null) {\n      return <div>loading...</div>;\n    }\n    return (\n      <div className=\"App\">\n        <div>\n          <Page\n            title=\"Power outages in the United States\"\n            text=\"Power outages occur for many reasons.\n            We are focusing on the United States power outage data.\n            We want to analyzed the causes, frequency, impactfulness, and when do they happen\"\n          />\n          <QuestionPage title=\"What causes outages?\" text=\"description...\" />\n          <VisualizationPage\n            title=\"What causes power outages?\"\n            text=\"Each node represents about 10 power outages\"\n            visualization={\n              <Blob data={data} \n              screenSize={[screenWidth, screenHeight]} />\n            }\n          />\n          <QuestionPage\n            title=\"What are the most common causes?\"\n            text=\"description...\"\n          />\n          <VisualizationPage\n            title=\"What are the most common causes?\"\n            visualization={\n              <PieChart\n                data={data}\n                title=\"Power Outage Causes and Number of Customer Affected\"\n                screenSize={[screenWidth, screenHeight]}\n              />\n            }\n          />\n          <QuestionPage\n            title=\"Where is it more common?\"\n            text=\"description...\"\n          />\n          <VisualizationPage\n            title=\"Where is it more common?\"\n            visualization={\n              <USMap data={data} screenSize={[screenWidth, screenHeight]} />\n            }\n          />\n          <QuestionPage\n            title=\"When is it more impactful?\"\n            text=\"description...\"\n          />\n          <VisualizationPage\n            title=\"When is it more impactful?\"\n            text=\"visualization... bubble chart\"\n          />\n          <QuestionPage title=\"When does it happen?\" text=\"description...\" />\n          <VisualizationPage\n            visualization={\n              <LineChart\n                data={data}\n                title=\"Number of people affected over time\"\n              />\n            }\n          />\n          <Page\n            title=\"Conclusion\"\n            text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. \n            Sed consectetur ac lacus nec vulputate. Fusce felis mauris, \n            vehicula laoreet fermentum eu, congue a velit. Praesent maximus \n            mi est, in pharetra eros pellentesque id. Morbi placerat turpis \n            eu augue varius vestibulum. Phasellus ut odio sed dolor volutpat \n            semper quis a tellus. Vivamus lobortis tempus ipsum imperdiet \n            auctor. Aenean bibendum, magna sit amet tincidunt efficitur, \n            ante nulla accumsan risus, eu feugiat augue urna et ex. Sed nec \n            bibendum massa, sed volutpat ante. Nunc eu consequat augue. Morbi \n            fermentum iaculis lorem vitae egestas. Sed varius eu erat in iaculis.\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/power_outages_v3.b012b964.csv\";"],"sourceRoot":""}